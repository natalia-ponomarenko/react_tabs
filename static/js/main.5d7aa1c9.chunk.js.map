{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","onTabSelected","selectedTabId","activeTab","find","tab","id","className","map","title","classnames","href","onClick","content","defaultTab","App","useState","setSelectedTabId","getTitle","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAuB,SAAC,GAI9B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAYH,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOJ,MAAkBF,EAAK,GAEvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GACT,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MAEZ,OACE,oBACEF,UACEG,IAAW,CACT,YAAaP,EAAUG,KAAOD,EAAIC,KAGtC,UAAQ,MANV,SASE,mBACEK,KAAI,WAAML,GACV,UAAQ,UACRM,QAAS,WACHN,IAAOH,EAAUG,IACnBL,EAAcI,IALpB,SASGI,KAXEH,UAkBf,qBACEC,UAAU,QACV,UAAQ,aAFV,SAIGJ,EAAUU,cC9CNb,EAAc,CACzB,CAAEM,GAAI,QAASG,MAAO,QAASI,QAAS,eACxC,CAAEP,GAAI,QAASG,MAAO,QAASI,QAAS,eACxC,CAAEP,GAAI,QAASG,MAAO,QAASI,QAAS,gBAGpCC,EAAad,EAAK,GAEXe,EAAgB,WAC3B,MAA0CC,mBAASF,EAAWR,IAA9D,mBAAOJ,EAAP,KAAsBe,EAAtB,KAYA,OACE,sBAAKV,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IAVU,WACf,IAAMJ,EAAYH,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOJ,KAEhD,OAAOC,EAAYA,EAAUM,MAAQK,EAAWL,MAQ3CS,MAEH,cAAC,EAAD,CACElB,KAAMA,EACNE,cAAeA,EACfD,cApBY,SAACI,GACjBY,EAAiBZ,EAAIC,WChBzBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5d7aa1c9.chunk.js","sourcesContent":["import classnames from 'classnames';\nimport { Tab } from '../../types';\n\ntype Props = {\n  tabs: Tab[],\n  onTabSelected: (tab: Tab) => void,\n  selectedTabId: string,\n};\n\nexport const Tabs:React.FC<Props> = ({\n  tabs,\n  onTabSelected,\n  selectedTabId,\n}) => {\n  const activeTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                className={\n                  classnames({\n                    'is-active': activeTab.id === tab.id,\n                  })\n                }\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (id !== activeTab.id) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div\n        className=\"block\"\n        data-cy=\"TabContent\"\n      >\n        {activeTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { Tab } from './types';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst defaultTab = tabs[0];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(defaultTab.id);\n\n  const selectTab = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  const getTitle = () => {\n    const activeTab = tabs.find((tab) => tab.id === selectedTabId);\n\n    return activeTab ? activeTab.title : defaultTab.title;\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {getTitle()}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={selectTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}